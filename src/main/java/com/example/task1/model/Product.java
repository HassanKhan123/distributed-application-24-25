package com.example.task1.model;

import java.math.BigDecimal;

import jakarta.persistence.Entity;
import jakarta.persistence.GeneratedValue;
import jakarta.persistence.GenerationType;
import jakarta.persistence.Id;
import jakarta.persistence.Table;

/**
 * Entity representing a product in the system.
 * 
 * <p>
 * This class is mapped to the database table `products` and includes attributes
 * to store essential product information such as name, price, size, and color.
 * </p>
 * 
 * <p>
 * Provides:
 * <ul>
 * <li>Getters and setters for all attributes to support easy access and
 * updates.</li>
 * <li>A no-argument constructor required for JPA.</li>
 * <li>A parameterized constructor for convenient object creation.</li>
 * </ul>
 * </p>
 */
@Entity
@Table(name = "products")
public class Product {

    /**
     * Unique identifier for the product.
     * Auto-generated by the database.
     */
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    /**
     * The name of the product.
     */
    private String productName;

    /**
     * The price of the product (stored as a string to support formatted values).
     */
    private BigDecimal productPrice;

    /**
     * The size of the product.
     */
    private String productSize;

    /**
     * The color of the product.
     */
    private String productColor;

    /**
     * Default constructor required by JPA.
     */
    public Product() {
    }

    /**
     * Parameterized constructor for creating a new product instance with all
     * attributes.
     *
     * @param productName  the name of the product
     * @param productPrice the price of the product
     * @param productSize  the size of the product
     * @param productColor the color of the product
     */
    public Product(String productName, BigDecimal productPrice, String productSize, String productColor) {
        this.productName = productName;
        this.productPrice = productPrice;
        this.productSize = productSize;
        this.productColor = productColor;
    }

    /**
     * Gets the unique identifier of the product.
     *
     * @return the product ID
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier for the product.
     *
     * @param id the product ID to set
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the name of the product.
     *
     * @return the product name
     */
    public String getProductName() {
        return productName;
    }

    /**
     * Sets the name of the product.
     *
     * @param productName the product name to set
     */
    public void setProductName(String productName) {
        this.productName = productName;
    }

    /**
     * Gets the price of the product.
     *
     * @return the product price
     */
    public BigDecimal getProductPrice() {
        return productPrice;
    }

    /**
     * Sets the price of the product.
     *
     * @param productPrice the product price to set
     */
    public void setProductPrice(BigDecimal productPrice) {
        this.productPrice = productPrice;
    }

    /**
     * Gets the size of the product.
     *
     * @return the product size
     */
    public String getProductSize() {
        return productSize;
    }

    /**
     * Sets the size of the product.
     *
     * @param productSize the product size to set
     */
    public void setProductSize(String productSize) {
        this.productSize = productSize;
    }

    /**
     * Gets the color of the product.
     *
     * @return the product color
     */
    public String getProductColor() {
        return productColor;
    }

    /**
     * Sets the color of the product.
     *
     * @param productColor the product color to set
     */
    public void setProductColor(String productColor) {
        this.productColor = productColor;
    }
}
